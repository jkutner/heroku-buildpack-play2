#!/usr/bin/env bash

is_play() {
  _has_playConfig $1
}

_has_playConfig() {
  local ctxDir=$1
  test -e $ctxDir/conf/application.conf
}

detect_play_lang() {
  local appDir=$1/app

  local num_scala_files=$(count_files ${appDir} '*.scala')
  local num_java_files=$(count_files ${appDir} '*.java')

  if [ ${num_scala_files} -gt ${num_java_files} ] ; then
    echo "Scala"
  elif [ ${num_scala_files} -lt ${num_java_files} ] ; then
    echo "Java"
  else
    echo ""
  fi
}

count_files() {
  local location=$1
  local pattern=$2

  if [ -d ${location} ]; then
    find ${location} -name ${pattern} | wc -l | sed 's/ //g'
  else
    echo "0"
  fi
}

_universal_packaging_procs() {
  local ctxDir=$1
  (cd $ctxDir; find target/universal/stage/bin -type f -executable)
}

_universal_packaging_proc_count() {
  local ctxDir=$1
  _universal_packaging_procs $ctxDir | wc -l
}

universal_packaging_default_web_proc() {
  local ctxDir=$1
  if [ $(_universal_packaging_proc_count $ctxDir) -eq 1 ]; then
    echo "web: $(_universal_packaging_procs $ctxDir) -Dhttp.port=\$PORT"
  fi
}

error() {
    echo " ! $1"
    exit 1
}

cache_copy() {
  rel_dir=$1
  from_dir=$2
  to_dir=$3
  rm -rf $to_dir/$rel_dir
  if [ -d $from_dir/$rel_dir ]; then
    mkdir -p $to_dir/$rel_dir
    cp -pr $from_dir/$rel_dir/. $to_dir/$rel_dir
  fi
}

clean_play_slug() {
  local buildDir=$1
  local sbtUserHome=$2

  # drop useless directories from slug for play only
  if is_play ${buildDir} ; then
    if [ -d ${sbtUserHome}/.ivy2 ]; then
      echo "-----> Dropping ivy cache from the slug"
      rm -rf ${sbtUserHome}/.ivy2
    fi
    if [ -d ${buildDir}/project/boot ] ; then
      echo "-----> Dropping project boot dir from the slug"
      rm -rf ${buildDir}/project/boot
    fi
    if [ -d ${buildDir}/target ] ; then
      echo "-----> Dropping compilation artifacts from the slug"
      rm -rf ${buildDir}/target/scala-*
      rm -rf ${buildDir}/target/streams
      rm -rf ${buildDir}/target/resolution-cache
    fi
  fi
}
